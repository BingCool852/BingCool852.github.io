<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>peakcool | 个人博客</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://peakcool.cn/</link>
    <atom:link href="http://peakcool.cn/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 14 Nov 2016 11:00:15 +0800</pubDate>
    <lastBuildDate>Mon, 14 Nov 2016 11:00:15 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Mac终端命令ftp上传文件</title>
        <description>&lt;p&gt;###1. 进入到本地上传文件目录&lt;/p&gt;

&lt;p&gt;###2. 执行命令 ftp ftp主机登陆地址&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://peakcool.cn/images/posts/ftp1.png&quot; alt=&quot;ftp-1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;###3. 输入用户名，密码&lt;/p&gt;

&lt;p&gt;####4. 进入htdos目录，put文件&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://peakcool.cn/images/posts/ftp2.png&quot; alt=&quot;ftp-2.png&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Nov 2016 10:00:34 +0800</pubDate>
        <link>http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/11/14/Mac-iTerm-ftp.html</link>
        <guid isPermaLink="true">http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/11/14/Mac-iTerm-ftp.html</guid>
        
        
        <category>技术分享</category>
        
      </item>
    
      <item>
        <title>Redis学习的一些总结</title>
        <description>&lt;p&gt;Redis是基于内存的数据存储系统，数据以key=&amp;gt;value形式存储。value支持多种数据类型，包括string,hash,list,set,sorted set等等。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;1.起步&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.redis.net.cn/tutorial/3503.html&quot;&gt;安装教程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;启动服务端: redis-server&lt;/p&gt;

&lt;p&gt;启动客户端: redis-cli&lt;/p&gt;

&lt;p&gt;验证是否成功:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1:6379&amp;gt; PING
PONG
127.0.0.1:6379&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.redis.net.cn/tutorial/3501.html&quot;&gt;学习教程&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;redisconf&quot;&gt;2.配置文件  redis.conf&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CONFIG GET * //查看所有配置
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;daemonize: 默认为no，yes则为启动redis-server时自动是后台运行方式&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;port: 指定端口号&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;bind: 绑定ip，只接受来自绑定ip的请求，更安全&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;redis-&quot;&gt;3.redis 数据持久化&lt;/h3&gt;

&lt;p&gt;RDB原理:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Redis使用fork函数复制一份当前进程(父) 的副本(子)&lt;/li&gt;
  &lt;li&gt;父进程继续接收并处理客户端发来的命令，而子进程开始将内存中的数据写入硬盘中的临时文件&lt;/li&gt;
  &lt;li&gt;当子进程写入完所有数据后会用该临时文件替换旧的rdb文件，到此一次快照操作完成。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AOF原理:&lt;/p&gt;

&lt;p&gt;AOF持久化方式记录每次对服务器写的操作，当服务器重启的时候会重新执行这些命令来恢复原始的数据。运作方式是不断地将命令追加到文件的末尾。&lt;/p&gt;

&lt;p&gt;如何选择？&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果想达到像数据库一样的数据安全性能，应该同时使用两种&lt;/li&gt;
  &lt;li&gt;若要求不是特别高，可以只使用RDB持久化&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;redis--1&quot;&gt;4.redis 开启启动服务&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;/etc/init.d/redis 加入以下内容&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;#!/bin/sh &lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;##chkconfig: 2345 80 90 &lt;/span&gt;
 &lt;span class=&quot;c&quot;&gt;##description:auto_run &lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/bin:/sbin:/usr/bin:/bin 

 &lt;span class=&quot;nv&quot;&gt;REDISPORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6379 
 &lt;span class=&quot;nv&quot;&gt;EXEC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/bin/redis-server 
 &lt;span class=&quot;nv&quot;&gt;REDIS_CLI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/bin/redis-cli 
	
 &lt;span class=&quot;nv&quot;&gt;PIDFILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/run/redis.pid 
 &lt;span class=&quot;nv&quot;&gt;CONF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/etc/redis.conf&quot;&lt;/span&gt; 
	
 &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in 
 &lt;/span&gt;start&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -f &lt;span class=&quot;nv&quot;&gt;$PIDFILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 
     &lt;span class=&quot;k&quot;&gt;then 
         &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; exists, process is already running or crashed&quot;&lt;/span&gt; 
     &lt;span class=&quot;k&quot;&gt;else 
         &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Starting Redis server...&quot;&lt;/span&gt; 
         &lt;span class=&quot;nv&quot;&gt;$EXEC&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$CONF&lt;/span&gt; 
     &lt;span class=&quot;k&quot;&gt;fi 
     if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 
     &lt;span class=&quot;k&quot;&gt;then 
         &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Redis is running...&quot;&lt;/span&gt; 
         &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt; 
         &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; 
     stop&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; 
     &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; ! -f &lt;span class=&quot;nv&quot;&gt;$PIDFILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 
     &lt;span class=&quot;k&quot;&gt;then 
         &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; does not exist, process is not running&quot;&lt;/span&gt; 
     &lt;span class=&quot;k&quot;&gt;else 
         &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;cat &lt;span class=&quot;nv&quot;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; 
         &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Stopping ...&quot;&lt;/span&gt;
         &lt;span class=&quot;nv&quot;&gt;$REDIS_CLI&lt;/span&gt; -p &lt;span class=&quot;nv&quot;&gt;$REDISPORT&lt;/span&gt; SHUTDOWN 
         &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -x &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PIDFILE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 
         &lt;span class=&quot;k&quot;&gt;do 
             &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Waiting for Redis to shutdown ...&quot;&lt;/span&gt; 
             sleep 1 
         &lt;span class=&quot;k&quot;&gt;done 
             &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Redis stopped&quot;&lt;/span&gt; 
         &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt; 
         &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; 
     restartforce-reload&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
         &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; stop 
         &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; start 
         &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; 
     &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
     &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Usage: /etc/init.d/redis {startstoprestartforce-reload}&quot;&lt;/span&gt; &amp;gt;&amp;amp;2 
         &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1 
 &lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt; 
 &lt;span class=&quot;c&quot;&gt;#######&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;设置权限: chmod +x /etc/init.d/redis&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;加入开机启动服务&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;linux: sudo chkconfig redis on&lt;/li&gt;
      &lt;li&gt;ubuntu: sudo sysv-rc-conf redis on&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;检查是否加入服务: service redis start&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;redis-6&quot;&gt;5.Redis 6种过期策略&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Volatile-lru : 只针对设置了过期时间的key&lt;/li&gt;
  &lt;li&gt;AllKeys-lru: 删除lru算法的key&lt;/li&gt;
  &lt;li&gt;Volatile-random: 随机删除即将过期的key&lt;/li&gt;
  &lt;li&gt;Allkeys-random: 随机删除&lt;/li&gt;
  &lt;li&gt;Volatile-ttl: 删除即将过期的key&lt;/li&gt;
  &lt;li&gt;noeviction: 永不过期&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;redis--2&quot;&gt;Redis 事务&lt;/h3&gt;

&lt;p&gt;事务是一个单独的隔离，事务中的所有命令都会序列化，按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。&lt;/p&gt;

&lt;p&gt;事务是一个原子操作，事务中的命令要么全部被执行(commit)，要么全部不执行，可以回滚(rollback)。&lt;/p&gt;

&lt;p&gt;一个事务从开始到执行会经历三个阶段&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;开始事务&lt;/li&gt;
  &lt;li&gt;命令入队&lt;/li&gt;
  &lt;li&gt;执行事务&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;序号&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;命令及描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DISCARD 取消事务，放弃执行事务块内的所有命令。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;EXEC 执行所有事务块内的命令。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;MULTI 标记一个事务块的开始。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;UNWATCH 取消 WATCH 命令对所有 key 的监视。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;WATCH key [key …] 监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;redis--3&quot;&gt;Redis 手册&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/ikodota/archive/2012/03/05/php_redis_cn.html&quot;&gt;Redis中文手册PHP版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.redis.net.cn/order/&quot;&gt;Redis手册&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://doc.redisfans.com/&quot;&gt;Redis命令参考&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;redis--4&quot;&gt;Redis 精文&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://coolshell.cn/articles/17416.html&quot;&gt;缓存更新套路–陈皓&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imooc.com/article/3585&quot;&gt;20分钟快速了解Redis–手插口袋_&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imooc.com/article/11205&quot;&gt;Redis进阶：数据持久化，安全，在PHP中使用–atwal&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 07 Nov 2016 10:00:34 +0800</pubDate>
        <link>http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/11/07/redis-learn.html</link>
        <guid isPermaLink="true">http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/11/07/redis-learn.html</guid>
        
        
        <category>技术分享</category>
        
      </item>
    
      <item>
        <title>「 衣调 」阿里云部署记录</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;「 衣调 」阿里云部署记录&lt;/h2&gt;

&lt;p&gt;今天完成了「 衣调 」 公众号的项目部署，记录了一些操作，和大家分享。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;服务器： 阿里云ESC&lt;/li&gt;
  &lt;li&gt;环境： Ubuntu + Apache/2.4.7 + PHP/5.5.9 + Mysql&lt;/li&gt;
  &lt;li&gt;项目： 前端 Vue1.0 + 后端 Laravel&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;step&quot;&gt;STEP&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;登录阿里云服务器: ssh root@server_ip -p 22&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;进入到webserver文件夹后clone 阿里云code仓库中的代码&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;我在执行git clone时，报错提示没有权限，这是因为缺少ssh密钥的原因，应将自己生成的密钥添加到远程git仓库密钥管理中去，具体步骤如下：&lt;/p&gt;

    &lt;p&gt;SSH key 可以让你在你的电脑和Code服务器之间建立安全的加密连接。 先执行以下语句来判断是否已经存在本地公钥：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  cat ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;如果你看到一长串以 ssh-rsa或 ssh-dsa开头的字符串, 你可以跳过 ssh-keygen的步骤。
  提示: 最好的情况是一个密码对应一个ssh key，但是那不是必须的。你完全可以跳过创建密码这个步骤。请记住设置的密码并不能被修改或获取。
  你可以按如下命令来生成ssh key：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ssh-keygen -t rsa -C &quot;账户&quot;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;这个指令会要求你提供一个位置和文件名去存放键值对和密码，你可以点击Enter键去使用默认值。
  用以下命令获取你生成的公钥：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  cat ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;复制这个公钥放到你的个人设置中的SSH/My SSH Keys下，请完整拷贝从ssh-开始直到你的用户名和主机名为止的内容。
  如果打算拷贝你的公钥到你的粘贴板下，请参考你的操作系统使用以下的命令：&lt;/p&gt;

    &lt;p&gt;Windows:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  clip &amp;lt; ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;Mac:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  pbcopy &amp;lt; ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;GNU/Linux (requires xclip):&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  xclip -sel clip &amp;lt; ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;把ssh keys	添加后就可以clone下远程仓库的代码
  &lt;strong&gt;(默认拉取master分支)&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;根据项目需求配置虚拟主机&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;当开始去操作时才发现服务器上的apache目录结构和我本地apache的目录结构并不一样，以至于浪费了比较多的时间，一直在想为什么没有httpd.conf，后来在一篇博文中找到了答案 &lt;a href=&quot;http://blog.csdn.net/veizz/article/details/7410784&quot;&gt;@博文链接&lt;/a&gt; 。&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;vi /etc/apache2/sites-available/newhosts.conf&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;VirtualHost *:80&amp;gt;
 ServerName www.name.com
 DocumentRoot &quot;/var/www/html/xxx/public/&quot;
 &amp;lt;Directory &quot;/var/www/html/xxx/public/&quot;&amp;gt;
 Options Indexes FollowSymLinks
 AllowOverride All
 Order allow,deny
 Allow from all
 DirectoryIndex index.html
 RewriteEngine on
 RewriteBase /
 RewriteCond %{REQUEST_FILENAME} !-f
 RewriteCond %{REQUEST_FILENAME} !-d
 RewriteRule ^(.*) index.html
 &amp;lt;/Directory&amp;gt;
 &amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;将sites_available链接到sites_enabled文件夹中&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo ln -s /etc/apache2/sites-available/newhosts.conf  /etc/apache2/sites-enabled/hosts.conf
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;重新启动apache&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo /etc/init.d/apache2 restart
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;相应文件夹权限赋值&lt;/strong&gt;&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;storage文件夹需写入权限&lt;/li&gt;
      &lt;li&gt;bootstrap/cache文件夹需写入权限&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;导入数据库&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 25 Oct 2016 10:00:34 +0800</pubDate>
        <link>http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/10/25/yidiao.html</link>
        <guid isPermaLink="true">http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/10/25/yidiao.html</guid>
        
        
        <category>技术分享</category>
        
      </item>
    
      <item>
        <title>mysql之TIMESTAMP（时间戳）用法详解</title>
        <description>&lt;h3 id=&quot;timestamp&quot;&gt;一、TIMESTAMP的变体&lt;/h3&gt;
&lt;p&gt;TIMESTAMP时间戳在创建的时候可以有多重不同的特性，如：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在创建新记录和修改现有记录的时候都对这个数据列刷新：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在创建新记录的时候把这个字段设置为当前时间，但以后修改时，不再刷新它：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; TIMESTAMP DEFAULT CURRENT_TIMESTAMP
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在创建新记录的时候把这个字段设置为0，以后修改时刷新它：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在创建新记录的时候把这个字段设置为给定值，以后修改时刷新它：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; TIMESTAMP DEFAULT ‘yyyy-mm-dd hh:mm:ss' ON UPDATE CURRENT_TIMESTAMP
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;MySQL目前不支持列的Default 为函数的形式,如达到你某列的默认值为当前更新日期与时间的功能,你可以使用TIMESTAMP列类型,下面就详细说明TIMESTAMP列类型&lt;/p&gt;

&lt;h3 id=&quot;timestamp-1&quot;&gt;二、TIMESTAMP列类型&lt;/h3&gt;
&lt;p&gt;TIMESTAMP值可以从1970的某时的开始一直到2037年，精度为一秒，其值作为数字显示。&lt;/p&gt;

&lt;p&gt;TIMESTAMP值显示尺寸的格式如下表所示：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;+---------------+----------------+
| 列类型　　　　| 显示格式　　　 |
| TIMESTAMP&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | YYYYMMDDHHMMSS |　
| TIMESTAMP&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | YYMMDDHHMMSS　 |
| TIMESTAMP&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | YYMMDDHHMM　　 |
| TIMESTAMP&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;　| YYYYMMDD　　　 |
| TIMESTAMP&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;　| YYMMDD　　　　 |
| TIMESTAMP&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;　| YYMM　　　　　 |
| TIMESTAMP&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;　| YY　　　　　　 |
+---------------+----------------+&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;“完整”TIMESTAMP格式是14位，但TIMESTAMP列也可以用更短的显示尺寸，创造最常见的显示尺寸是6、8、12、和14。&lt;/p&gt;

&lt;p&gt;你可以在创建表时指定一个任意的显示尺寸，但是定义列长为0或比14大均会被强制定义为列长14。&lt;/p&gt;

&lt;p&gt;列长在从1～13范围的奇数值尺寸均被强制为下一个更大的偶数。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;列如：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;定义字段长度　　 强制字段长度&lt;/p&gt;

&lt;p&gt;TIMESTAMP(0) -&amp;gt;　TIMESTAMP(14)&lt;/p&gt;

&lt;p&gt;TIMESTAMP(15)-&amp;gt;　TIMESTAMP(14)&lt;/p&gt;

&lt;p&gt;TIMESTAMP(1) -&amp;gt;　TIMESTAMP(2)&lt;/p&gt;

&lt;p&gt;TIMESTAMP(5) -&amp;gt;　TIMESTAMP(6)&lt;/p&gt;

&lt;p&gt;所有的TIMESTAMP列都有同样的存储大小，使用被指定的时期时间值的完整精度（14位）存储合法的值不考虑显示尺寸。不合法的日期，将会被强制为0存储&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;这有几个含意：&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;虽然你建表时定义了列TIMESTAMP(8)，但在你进行数据插入与更新时TIMESTAMP列实际上保存了14位的数据（包括年月日时分秒），只不过在你进行查询时MySQL返回给你的是8位的年月日数据。如果你使用ALTER TABLE拓宽一个狭窄的TIMESTAMP列，以前被“隐蔽”的信息将被显示&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;同样，缩小一个TIMESTAMP列不会导致信息失去，除了感觉上值在显示时，较少的信息被显示出。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;尽管TIMESTAMP值被存储为完整精度，直接操作存储值的唯一函数是UNIX_TIMESTAMP()；由于MySQL返回TIMESTAMP列的列值是进过格式化后的检索的值，这意味着你可能不能使用某些函数来操作TIMESTAMP列（例如HOUR()或SECOND()），除非TIMESTAMP值的相关部分被包含在格式化的值中。例如，一个TIMESTAMP列只有被定义为TIMESTAMP(10)以上时，TIMESTAMP列的HH部分才会被显示，因此在更短的TIMESTAMP值上使用HOUR()会产生一个不可预知的结果。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不合法TIMESTAMP值被变换到适当类型的“零”值(00000000000000)。（DATETIME,DATE亦然）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;例如你可以使用下列语句来验证：&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;CREATE TABLE &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt; INT &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; UNSIGNED AUTO_INCREMENT, &lt;span class=&quot;s1&quot;&gt;'date1'&lt;/span&gt;
TIMESTAMP &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; PRIMARY KEY&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
INSERT INTO &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;SET id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1;
SELECT &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; FROM &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;;
+----+----------------+
| id | date1　　　　　|
+----+----------------+
|　1 | 20021114　　　 |
+----+----------------+
ALTER TABLE &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;CHANGE &lt;span class=&quot;s1&quot;&gt;'date1'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'date1'&lt;/span&gt; TIMESTAMP&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
SELECT &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; FROM &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;;
+----+----------------+
| id | date1　　　　　|
+----+----------------+
|　1 | 20021114093723 |
+----+----------------+&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;你可以使用TIMESTAMP列类型自动地用当前的日期和时间标记INSERT或UPDATE的操作。&lt;/p&gt;

&lt;p&gt;如果你有多个TIMESTAMP列，只有第一个自动更新。自动更新第一个TIMESTAMP列在下列任何条件下发生：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;列值没有明确地在一个INSERT或LOAD DATA INFILE语句中指定。&lt;/li&gt;
  &lt;li&gt;列值没有明确地在一个UPDATE语句中指定且另外一些的列改变值。（注意一个UPDATE设置一个列为它已经有的值，这将不引起TIMESTAMP列被更新，因为如果你设置一个列为它当前的值，MySQL为了效率而忽略更改。）&lt;/li&gt;
  &lt;li&gt;你明确地设定TIMESTAMP列为NULL.&lt;/li&gt;
  &lt;li&gt;除第一个以外的TIMESTAMP列也可以设置到当前的日期和时间，只要将列设为NULL，或NOW()。&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;CREATE TABLE &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; 
&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt; INT &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; UNSIGNED AUTO_INCREMENT,
&lt;span class=&quot;s1&quot;&gt;'date1'&lt;/span&gt; TIMESTAMP &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,
&lt;span class=&quot;s1&quot;&gt;'date2'&lt;/span&gt; TIMESTAMP &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;14&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,
PRIMARY KEY&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
INSERT INTO &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;id, date1, date2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; VALUES &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1, NULL, NULL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
INSERT INTO &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;SET &lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 2;
+----+----------------+----------------+
| id | date1　　　　　| date2　　　　　|
+----+----------------+----------------+
|　1 | 20021114093723 | 20021114093723 |
|　2 | 20021114093724 | 00000000000000 |
+----+----------------+----------------+&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;第一条指令因设date1、date2为NULL,所以date1、date2值均为当前时间第二条指令因没有设date1、date2列值，第一个TIMESTAMP列date1为更新为当前时间，而二个TIMESTAMP列date2因日期不合法而变为“00000000000000”&lt;/p&gt;

&lt;hr /&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;UPDATE &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;SET &lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 3 WHERE &lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1;
+----+----------------+----------------+
| id | date1　　　　　| date2　　　　　|
+----+----------------+----------------+
|　3 | 20021114094009 | 20021114093723 |
|　2 | 20021114093724 | 00000000000000 |
+----+----------------+----------------+&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这条指令没有明确地设定date2的列值，所以第一个TIMESTAMP列date1将被更新为当前时间&lt;/p&gt;

&lt;hr /&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;UPDATE &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;SET &lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1,date1&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;date1,date2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NOW&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; WHERE &lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3; 
+----+----------------+----------------+
| id | date1　　　　　| date2　　　　　|
+----+----------------+----------------+
|　1 | 20021114094009 | 20021114094320 |
|　2 | 20021114093724 | 00000000000000 |
+----+----------------+----------------+&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这条指令因设定date1=date1，所以在更新数据时date1列值并不会发生改变而因设定date2=NOW()，所以在更新数据时date2列值会被更新为当前时间此指令等效为：&lt;/p&gt;

&lt;hr /&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;UPDATE &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;SET &lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1,date1&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;date1,date2&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NULL WHERE &lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;因MySQL返回的 TIMESTAMP 列为数字显示形式，你可以用DATE_FROMAT()函数来格式化 TIMESTAMP 列，如下所示：&lt;/p&gt;

&lt;hr /&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;SELECT id,DATE_FORMAT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;date1,&lt;span class=&quot;s1&quot;&gt;'%Y-%m-%d %H:%i:%s'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; As date1,
DATE_FORMAT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;date2,&lt;span class=&quot;s1&quot;&gt;'%Y-%m-%d %H:%i:%s'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; As date2 FROM &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;;
+----+---------------------+---------------------+
| id | date1　　　　　　　 | date2　　　　　　　 |
+----+---------------------+---------------------+
|　1 | 2002-11-14 09:40:09 | 2002-11-14 09:43:20 |
|　2 | 2002-11-14 09:37:24 | 0000-00-00 00:00:00 |
+----+---------------------+---------------------+
SELECT id,DATE_FORMAT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;date1,&lt;span class=&quot;s1&quot;&gt;'%Y-%m-%d'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; As date1,
DATE_FORMAT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;date2,&lt;span class=&quot;s1&quot;&gt;'%Y-%m-%d'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; As date2 FROM &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;;
+----+-------------+-------------+
| id | date1　　　 | date2　　　 |
+----+-------------+-------------+
|　1 | 2002-11-14　| 2002-11-14　|
|　2 | 2002-11-14　| 0000-00-00　|
+----+-------------+-------------+&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在某种程度上，你可以把一种日期类型的值赋给一个不同的日期类型的对象。
然而，而尤其注意的是：值有可能发生一些改变或信息的损失：&lt;/p&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;如果你将一个DATE值赋给一个DATETIME或TIMESTAMP对象，结果值的时间部分被设置为’00:00:00’，因为DATE值中不包含有时间信息。　　&lt;/li&gt;
  &lt;li&gt;如果你将一个DATETIME或TIMESTAMP值赋给一个DATE对象，结果值的时间部分被删除，因为DATE类型不存储时间信息。&lt;/li&gt;
  &lt;li&gt;尽管DATETIME, DATE和TIMESTAMP值全都可以用同样的格式集来指定，但所有类型不都有同样的值范围。
例如，TIMESTAMP值不能比1970早，也不能比2037晚，这意味着，一个日期例如’1968-01-01’，当作为一个DATETIME或DATE值时它是合法的，但它不是一个正确TIMESTAMP值！并且如果将这样的一个对象赋值给TIMESTAMP列，它将被变换为0。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section&quot;&gt;三、当指定日期值时，当心某些缺陷：&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;允许作为字符串指定值的宽松格式能被欺骗。例如，因为“:”分隔符的使用，值’10:11:12’可能看起来像时间值，但是如果在一个日期中使用，上下文将作为年份被解释成’2010-11-12’。值’10:45:15’将被变换到’0000-00-00’，因为’45’不是一个合法的月份。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;以2位数字指定的年值是模糊的，因为世纪是未知的。MySQL使用下列规则解释2位年值：
在00-69范围的年值被变换到2000-2069。 在范围70-99的年值被变换到1970-1999。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 18 Oct 2016 01:39:39 +0800</pubDate>
        <link>http://peakcool.cn/%E8%BD%AC%E8%BD%BD%E6%94%B6%E8%97%8F/2016/10/18/mysql-timestamp.html</link>
        <guid isPermaLink="true">http://peakcool.cn/%E8%BD%AC%E8%BD%BD%E6%94%B6%E8%97%8F/2016/10/18/mysql-timestamp.html</guid>
        
        
        <category>转载收藏</category>
        
      </item>
    
      <item>
        <title>2016-5 开发总结</title>
        <description>&lt;h2 id=&quot;carbon-laravel&quot;&gt;Carbon时间类库 这个是laravel御用类库，用起来非常的方便&lt;/h2&gt;

&lt;p&gt;官网地址: &lt;a href=&quot;http://carbon.nesbot.com&quot;&gt;http://carbon.nesbot.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Git地址: &lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;https://github.com/briannesbitt/Carbon&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;用法：&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;引用&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;use Carbon\Carbon;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;基本操作&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Carbon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'first day of December 2008'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addWeeks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// 2008-12-15 00:00:00
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Carbon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'first day of December 2008'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addWeeks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 2008-12-15 00:00:00
&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Carbon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                               &lt;span class=&quot;c1&quot;&gt;// 2015-11-11 12:38:36
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Carbon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                             &lt;span class=&quot;c1&quot;&gt;// 2015-11-11 00:00:00
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tomorrow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Carbon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tomorrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Europe/London'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tomorrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                          &lt;span class=&quot;c1&quot;&gt;// 2015-11-12 00:00:00
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$yesterday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Carbon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;yesterday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$yesterday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;// 2015-11-10 00:00:00
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Carbon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createFromFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Y-m-d H'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1975-05-21 22'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toDateTimeString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1975&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;image&quot;&gt;2、Image类库&lt;/h3&gt;

&lt;p&gt;Intervention Image 是一个PHP图片操作处理库，为图片创建、修改及压缩等处理提供了便捷方式。此外，还提供了服务提供者和门面以便集成到Laravel应用中。&lt;/p&gt;

&lt;p&gt;官网地址: &lt;a href=&quot;http://image.intervention.io&quot;&gt;http://image.intervention.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Git地址: &lt;a href=&quot;https://github.com/Intervention/image&quot;&gt;https://github.com/Intervention/image&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;用法:&lt;/h4&gt;

&lt;p&gt;Laravel学院: &lt;a href=&quot;http://laravelacademy.org/post/3585.html&quot;&gt;http://laravelacademy.org/post/3585.html&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;curl&quot;&gt;3、curl网站开发命令&lt;/h3&gt;

&lt;p&gt;阮一峰网络日志 &lt;a href=&quot;http://www.ruanyifeng.com/blog/2011/09/curl.html&quot;&gt;http://www.ruanyifeng.com/blog/2011/09/curl.html&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;curl -v&lt;/em&gt;&lt;/strong&gt; 查看通信过程&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;~ curl -v www.sina.com
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Rebuilt URL to: www.sina.com/
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;   Trying 202.108.33.71...
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Connected to www.sina.com &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;202.108.33.71&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; port 80 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#0)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;GET / HTTP/1.1
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;Host: www.sina.com
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;User-Agent: curl/7.43.0
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;Accept: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&amp;gt;
&amp;lt; HTTP/1.1 301 Moved Permanently
&amp;lt; Server: nginx
&amp;lt; Date: Thu, 12 May 2016 11:57:45 GMT
&amp;lt; Content-Type: text/html
&amp;lt; Location: http://www.sina.com.cn/
&amp;lt; Expires: Thu, 12 May 2016 11:59:45 GMT
&amp;lt; Cache-Control: max-age&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;120
&amp;lt; Age: 49
&amp;lt; Content-Length: 178
&amp;lt; X-Cache: HIT from xd33-71.sina.com.cn
&amp;lt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;301 Moved Permanently&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body &lt;span class=&quot;nv&quot;&gt;bgcolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;white&quot;&lt;/span&gt;&amp;gt;
&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;301 Moved Permanently&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;
&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;nginx&amp;lt;/center&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Connection &lt;span class=&quot;c&quot;&gt;#0 to host www.sina.com left intact&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;表单通信&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -X GET http://localhost/form.php?data=1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -X POST --data &quot;data=1&quot; http://localhost/form.php
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 12 May 2016 20:26:39 +0800</pubDate>
        <link>http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/05/12/201605-dev.html</link>
        <guid isPermaLink="true">http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/05/12/201605-dev.html</guid>
        
        
        <category>技术分享</category>
        
      </item>
    
      <item>
        <title>PHP基础篇之变量常量</title>
        <description>&lt;p&gt;php中变量名都是跟在美元符号$后面,变量名由字母或者下划线开头，后面跟上任意数量的字母，数字，或者下划线。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Tom&quot;&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jack&quot;&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;;
Tom
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;; //变量名区分大小写
Jack&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;section&quot;&gt;1. 变量的赋值&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;直接赋值&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当一个变量的值赋予另外一个变量时，改变其中一个变量的值，将不会影响到另外一个变量&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 10;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 5;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'a的值为:'&lt;/span&gt;.&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;.&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;.&lt;span class=&quot;s1&quot;&gt;'b的值为'&lt;/span&gt;.&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;;
a的值为:5
b的值为10&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;引用赋值&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;改动新的变量将影响到原始变量，改变原始变量也会影响到新的变量，使用引用赋值需在变量名面前加&amp;amp;符号。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 10;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &amp;amp;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 5;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a的值为&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;.&lt;span class=&quot;s2&quot;&gt;&quot;b的值为&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;.&lt;span class=&quot;s2&quot;&gt;&quot;c的值为&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;;
a的值为5
b的值为10
c的值为5&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;section-1&quot;&gt;2. 变量的操作&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;是否声明&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;bool isset ( mixed $var )&lt;/p&gt;

&lt;p&gt;如果$var存在即返回true，不存在返回false。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; var_dump&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;isset&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
bool&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$sex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;man&quot;&lt;/span&gt;;
php &amp;gt; var_dump&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;isset&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
bool&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;是否为空&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;bool empty ( mixed $var )&lt;/p&gt;

&lt;p&gt;如果$var是非空或者非零，返回false；” “、0、”0”、NULL、FALSE、array()，以及没有任何属性的对象都将被认为是空的，如果 var 为空，则返回 TRUE。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;bool&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Tom&quot;&lt;/span&gt;;
php &amp;gt; var_dump&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;empty&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
bool&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;释放变量&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;void unset ( mixed $var [, mixed $var [, $… ]] )&lt;/p&gt;

&lt;p&gt;销毁指定变量$var。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;tom&quot;&lt;/span&gt;;
php &amp;gt; var_dump&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;isset&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
bool&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;unset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; var_dump&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;isset&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
bool&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;section-2&quot;&gt;3. 全局变量&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;global 关键字&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;输出结果&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;$GLOBALS 数组&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$GLOBALS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$GLOBALS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$GLOBALS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;输出结果&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;section-3&quot;&gt;4. 静态变量&lt;/h4&gt;

&lt;p&gt;static $var&lt;/p&gt;

&lt;p&gt;静态变量仅在局部函数域中存在，但当程序执行离开此作用域时，其值不丢失。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;输出结果&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12345678910&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section-4&quot;&gt;常量&lt;/h3&gt;

&lt;p&gt;常量是简单值的标识符，对大小写敏感，标识符总是大写的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;定义常量:&lt;/strong&gt; define ( ‘标识符’ , ‘对应值’ )&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; define&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;NAME&quot;&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'tom'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;NAME;
tom&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;常见”魔术”常量&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://peakcool.cn/images/posts/php-constant.png&quot; alt=&quot;常见&amp;quot;魔术&amp;quot;常量&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 03 May 2016 10:00:34 +0800</pubDate>
        <link>http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/05/03/php-variable-constant.html</link>
        <guid isPermaLink="true">http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/05/03/php-variable-constant.html</guid>
        
        
        <category>技术分享</category>
        
      </item>
    
      <item>
        <title>PHP基础篇之数组</title>
        <description>&lt;p&gt;php中的数组array就是一个有序映射，把 value（值） 关联到 key（键）。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;array()函数声明数组&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;;
Tom
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1];
Hello&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;;
Tom
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1];
Hello&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;直接为数组元素赋值&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'World'&lt;/span&gt;;
php &amp;gt; print_r&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
Array
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;name] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Tom
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; World
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;键(key)可以是一个整数(integer)或字符串(string),不能用数组和对象作为键(key)。这样做会导致一个警告：Illegal offset type。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;值(value) 可以是任意类型的值。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;section&quot;&gt;数组的简单操作&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;用方括号的语法新建／修改，即给变量名加上一对空的方括号（“[]”）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;删除数组或删除数组的一个键名/值对，用unset()&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'age'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; print_r&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
Array
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;name] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Tom
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;age] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 12
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 999;
php &amp;gt; print_r&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
Array
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;name] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Jack
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;age] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 12
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;id] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 999
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;unset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; print_r&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;

Notice: Undefined variable: arr &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;php shell code on line 1 //未定义&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;遍历数组foreach($array as $key =&amp;gt; $value)&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;, 2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;, 3 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Lucy'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; foreach&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; as &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;.&lt;span class=&quot;s1&quot;&gt;'=&amp;gt;'&lt;/span&gt;.&lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt;.&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt;Tom
&lt;span class=&quot;nv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt;Jack
&lt;span class=&quot;nv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt;Lucy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;unset()函数允许删除数组中的某个键，但要注意数组将不会重建索引。重建索引可以使用函数array_values()&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;, 2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;, 3 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Lucy'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;unset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; print_r&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
Array
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Tom
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Lucy
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
php &amp;gt; print_r&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;array_values&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
Array
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Tom
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Lucy
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;section-1&quot;&gt;数组常用函数&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;array_combine&lt;/strong&gt; 创建一个数组，用一个数组的值作为其键名，另一个数组的值作为其值array array_combine ( array $keys , array $values )&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Lucy'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'football'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'basketball'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'tennis'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; print_r&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;array_combin&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;,&lt;span class=&quot;nv&quot;&gt;$arr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
Array
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Tom] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; football
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Jack] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; basketball
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Lucy] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; tennis
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;array_count_values&lt;/strong&gt; 统计数组中所有的值出现的次数array array_count_values ( array $input )&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'football'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'football'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; print_r&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;array_count_values&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
Array
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Tom] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 1
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Jack] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 2
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;football] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 2
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;array_diff&lt;/strong&gt; 计算数组的差集array array_diff ( array $array1 , array $array2 [, array $ … ] )&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Lucy'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Mark'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Mark'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; print_r&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; array_diff&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;,&lt;span class=&quot;nv&quot;&gt;$arr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
Array
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Lucy
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt; array_diff()返回一个数组，该数组包括了所有在 $arr1 中但是不在任何其它参数数组中的值。注意键名保留不变。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;array_flip&lt;/strong&gt; 交换数组中的键和值array array_flip ( array $trans )&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'football'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'basketball'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Lucy'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt;         &lt;span class=&quot;s1&quot;&gt;'tennis'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; print_r &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;array_flip&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
Array
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;football] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Tom
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;basketball] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Jack
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tennis] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Lucy
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt; 如果同一个值出现多次，则最后一个键名将作为它的值，所有其它的都将丢失。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;array_keys&lt;/strong&gt; 返回数组中所有的键名array array_keys ( array $input [, mixed $search_value [, bool $strict ]] )如果指定了可选参数 search_value，则只返回该值的键名。&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'football'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'football'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; print_r &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;array_keys&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
Array
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 0
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 1
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;2] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 2
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 3
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;4] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 4
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
php &amp;gt; print_r &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;array_keys&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'football'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
Array
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 2
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 4
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;in_array&lt;/strong&gt; 检查数组中是否存在某个值bool in_array ( mixed $needle , array $haystack [, bool $strict ] )如果第三个参数 strict 的值为 TRUE 则 in_array() 函数还会检查 needle 的类型是否和 haystack 中的相同。&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'football'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;in_array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
1 //1即表示true&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;array_merge&lt;/strong&gt; 合并一个或多个数组array array_merge ( array $array1 [, array $array2 [, array $… ]] )如果输入的数组中有相同的字符串键名，则该键名后面的值将覆盖前一个值。然而，如果数组包含数字键名，后面的值将不会覆盖原来的值，而是附加到后面。&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'age'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 12,6 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'class'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 3, 6 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'black'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; print_r &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; array_merge&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;,&lt;span class=&quot;nv&quot;&gt;$arr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
Array
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;name] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Tom
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;age] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 12
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; red
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;class] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 3
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; black
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;array_unique&lt;/strong&gt; 移除数组中重复的值array array_unique ( array $array )注意键名保留不变。&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;, 12,&lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'red'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'12'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; var_dump&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;array_unique&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; string&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jack&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;0] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; int&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; string&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;red&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;count&lt;/strong&gt; 计算数组中元素个数int count( $array )&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Lucy'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; var_dump&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;count&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;;
int&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;sort&lt;/strong&gt; 数组排序bool sort ( array &amp;amp;$array [, int $sort_flags ] )此函数将为 array 中的元素赋与新的键名。这将删除原有的键名，而不是仅仅将键名重新排序。成功返回true，失败返回false。&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; array&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;'Lucy'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
sort&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
php &amp;gt; foreach&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arr&lt;/span&gt; as &lt;span class=&quot;nv&quot;&gt;$k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$k&lt;/span&gt;.&lt;span class=&quot;s1&quot;&gt;' =&amp;gt; '&lt;/span&gt;.&lt;span class=&quot;nv&quot;&gt;$v&lt;/span&gt;.&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Jack
1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Lucy
2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Tom&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt; 对一些有混合类型的值的数组排序时要小心，sotr()会产生不可预知的效果。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;我是一名php初学者，在学习的时候写了这些总结和大家分享，有不恰当的地方欢迎大家多多指正，我也会虚心的接受大家的建议，希望和大家共同进步。&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Wed, 27 Apr 2016 22:52:19 +0800</pubDate>
        <link>http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/04/27/php-array.html</link>
        <guid isPermaLink="true">http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/04/27/php-array.html</guid>
        
        <category>php</category>
        
        
        <category>技术分享</category>
        
      </item>
    
      <item>
        <title>PHP程序员的技术成长规划【转载】</title>
        <description>&lt;p&gt;按照了解的很多PHP/LNMP程序员的发展轨迹，结合个人经验体会，抽象出很多程序员对未来的迷漫，特别对技术学习的盲目和慌乱，简单梳理了这个每个阶段PHP程序员的技术要求，来帮助很多PHP程序做对照设定学习成长目标。&lt;/p&gt;

&lt;p&gt;本文按照目前主流技术做了一个基本的梳理，整个是假设PHP程序员不是基础非常扎实的情况进行的设定，并且所有设定都非常具体明确清晰，可能会让人觉得不适，请理解仅代表一家之言。（未来技术变化不在讨论范围）&lt;/p&gt;

&lt;h2 id=&quot;php&quot;&gt;第一阶段：基础阶段（基础PHP程序员）&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;重点&lt;/strong&gt;：把LNMP搞熟练（核心是安装配置基本操作）
&lt;strong&gt;目标&lt;/strong&gt;：能够完成基本的LNMP系统安装，简单配置维护；能够做基本的简单系统的PHP开发；能够在PHP中型系统中支持某个PHP功能模块的开发。
&lt;strong&gt;时间&lt;/strong&gt;：完成本阶段的时间因人而异，有的成长快半年一年就过了，成长慢的两三年也有。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.Linux：&lt;/strong&gt;
基本命令、操作、启动、基本服务配置（包括rpm安装文件，各种服务配置等）；会写简单的shell脚本和awk/sed 脚本命令等。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.Nginx：&lt;/strong&gt;
做到能够安装配置nginx+php，知道基本的nginx核心配置选项，知道 server/fastcgi_pass/access_log 等基础配置，目标是能够让nginx+php_fpm顺利工作。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.MySQL：&lt;/strong&gt;
会自己搭建mysql，知道基本的mysql配置选项；知道innodb和myisam的区别，知道针对InnoDB和MyISAM两个引擎的不同配置选项；知道基本的两个引擎的差异和选择上面的区别；能够纯手工编译搭建一个MySQL数据库并且配置好编码等正常稳定运行；核心主旨是能够搭建一个可运行的MySQL数据库。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.PHP：&lt;/strong&gt;
基本语法数组、字符串、数据库、XML、Socket、GD/ImageMgk图片处理等等；熟悉各种跟MySQL操作链接的api（mysql/mysqli/PDO)，知道各种编码问题的解决；知道常规熟练使用的PHP框架（ThinkPHP、Zendframework、Yii、Yaf等）；了解基本MVC的运行机制和为什么这么做，稍微知道不同的PHP框架之间的区别；能够快速学习一个MVC框架。能够知道开发工程中的文件目录组织，有基本的良好的代码结构和风格，能够完成小系统的开发和中型系统中某个模块的开发工作。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.前端：&lt;/strong&gt;
如果条件时间允许，可以适当学习下 HTML/CSS/JS 等相关知识，知道什么web标准，div+css的web/wap页面模式，知道HTML5和HTML4的区别；了解一些基本的前端只是和JS框架（jQuery之类的）；了解一些基本的JavaScript编程知识；（本项不是必须项，如果有时间，稍微了解一下是可以的，不过不建议作为重点，除非个人有强烈兴趣）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.系统设计：&lt;/strong&gt;
能够完成小型系统的基本设计，包括简单的数据库设计，能够完成基本的：浏览器 -&amp;gt; Nginx+PHP -&amp;gt; 数据库 架构的设计开发工作；能够支撑每天几十万到数百万流量网站的开发维护工作；&lt;/p&gt;

&lt;h2 id=&quot;php-1&quot;&gt;第二阶段：提高阶段 （中级PHP程序员）&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;重点：&lt;/strong&gt;提高针对LNMP的技能，能够更全面的对LNMP有熟练的应用。
&lt;strong&gt;目标：&lt;/strong&gt;能够随时随地搭建好LNMP环境，快速完成常规配置；能够追查解决大部分遇到的开发和线上环境的问题；能够独立承担中型系统的构架和开发工作；能够在大型系统中承担某个中型模块的开发工作；&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Linux:&lt;/strong&gt;
在第一阶段的基础上面，能够流畅的使用Shell脚本来完成很多自动化的工作；awk/sed/perl 也操作的不错，能够完成很多文本处理和数据统计等工作；基本能够安装大部分非特殊的Linux程序（包括各种库、包、第三方依赖等等，比如MongoDB/Redis/Sphinx/Luncene/SVN之类的）；了解基本的Linux服务，知道如何查看Linux的性能指标数据，知道基本的Linux下面的问题跟踪等。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Nginx:&lt;/strong&gt;
在第一阶段的基础上面，了解复杂一些的Nginx配置；包括 多核配置、events、proxy_pass，sendfile/tcp_*配置，知道超时等相关配置和性能影响；知道nginx除了web server，还能够承担代理服务器、反向静态服务器等配置；知道基本的nginx配置调优；知道如何配置权限、编译一个nginx扩展到nginx；知道基本的nginx运行原理（master/worker机制，epoll），知道为什么nginx性能比apache性能好等知识；&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. MySQL/MongoDB：&lt;/strong&gt;
在第一阶段的基础上面，在MySQL开发方面，掌握很多小技巧，包括常规SQL优化（group by/order by/rand优化等）；除了能够搭建MySQL，还能够冷热备份MySQL数据，还知道影响innodb/myisam性能的配置选项（比如key_buffer/query_cache/sort_buffer/innodb_buffer_pool_size/innodb_flush_log_at_trx_commit等），也知道这些选项配置成为多少值合适；另外也了解一些特殊的配置选项，比如 知道如何搭建mysql主从同步的环境，知道各个binlog_format的区别；知道MySQL的性能追查，包括slow_log/explain等，还能够知道基本的索引建立处理等知识；原理方面了解基本的MySQL的架构（Server+存储引擎），知道基本的InnoDB/MyISAM索引存储结构和不同（聚簇索引，B树）；知道基本的InnoDB事务处理机制；了解大部分MySQL异常情况的处理方案（或者知道哪儿找到处理方案）。条件允许的情况，建议了解一下NoSQL的代表MongoDB数据库，顺便对比跟MySQL的差别，同事能够在合适的应用场景安全谨慎的使用MongoDB，知道基本的PHP与MongoDB的结合开发。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Redis/Memcached：&lt;/strong&gt;
在大部分中型系统里面一定会涉及到缓存处理，所以一定要了解基本的缓存；知道Memcached和Redis的异同和应用场景，能够独立安装 Redis/Memcached，了解Memcahed的一些基本特性和限制，比如最大的value值，知道PHP跟他们的使用结合；Redis了解基本工作原理和使用，了解常规的数据类型，知道什么场景应用什么类型，了解Redis的事务等等。原理部分，能够大概了解Memcached的内存结构（slab机制），redis就了解常用数据类型底层实现存储结构（SDS/链表/SkipList/HashTable）等等，顺便了解一下Redis的事务、RDB、AOF等机制更好&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. PHP：&lt;/strong&gt;
除了第一阶段的能力，安装配置方面能够随意安装PHP和各种第三方扩展的编译安装配置；了解php-fpm的大部分配置选项和含义（如max_requests/max_children/request_terminate_timeout之类的影响性能的配置），知道mod_php/fastcgi的区别；在PHP方面已经能够熟练各种基础技术，还包括各种深入些的PHP，包括对PHP面向对象的深入理解/SPL/语法层面的特殊特性比如反射之类的；在框架方面已经阅读过最少一个以上常规PHP MVC框架的代码了，知道基本PHP框架内部实现机制和设计思想；在PHP开发中已经能够熟练使用常规的设计模式来应用开发（抽象工厂/单例/观察者/命令链/策略/适配器 等模式）；建议开发自己的PHP MVC框架来充分让开发自由化，让自己深入理解MVC模式，也让自己能够在业务项目开发里快速升级；熟悉PHP的各种代码优化方法，熟悉大部分PHP安全方面问题的解决处理；熟悉基本的PHP执行的机制原理（Zend引擎/扩展基本工作机制）；&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. C/C++：&lt;/strong&gt;
开始涉猎一定的C/C++语言，能够写基本的C/C++代码，对基本的C/C++语法熟悉（指针、数组操作、字符串、常规标准API）和数据结构（链表、树、哈希、队列）有一定的熟悉下；对Linux下面的C语言开发有基本的了解概念，会简单的makefile文件编写，能够使用简单的GCC/GDB的程序编译简单调试工作；对基本的网络编程有大概了解。（本项是为了向更高层次打下基础）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. 前端：&lt;/strong&gt;
在第一阶段的基础上面，熟悉基本的HTTP协议（协议代码200/300/400/500，基本的HTTP交互头）；条件允许，可以在深入写出稍微优雅的HTML+CSS+JavaScript，或者能够大致简单使用某些前端框架（jQuery/YUI/ExtJS/RequireJS/BootStrap之类）；如果条件允许，可以深入学习JavaScript编程，比如闭包机制、DOM处理；再深入些可以读读jQuery源码做深入学习。（本项不做重点学习，除非对前端有兴趣）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. 系统设计：&lt;/strong&gt;
能够设计大部分中型系统的网站架构、数据库、基本PHP框架选型；性能测试排查处理等；能够完成类似：浏览器 -&amp;gt; CDN(Squid) -&amp;gt; Nginx+PHP -&amp;gt; 缓存 -&amp;gt; 数据库 结构网站的基本设计开发维护；能够支撑每天数百万到千万流量基本网站的开发维护工作；&lt;/p&gt;

&lt;h2 id=&quot;php-2&quot;&gt;第三阶段：高级阶段 （高级PHP程序员）&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;重点：&lt;/strong&gt;除了基本的LNMP程序，还能够在某个方向或领域有深入学习。（纵深维度发展）
&lt;strong&gt;目标：&lt;/strong&gt;除了能够完成基本的PHP业务开发，还能够解决大部分深入复杂的技术问题，并且可以独立设计完成中大型的系统设计和开发工作；自己能够独立hold深入某个技术方向，在这块比较专业。（比如在MySQL、Nginx、PHP、Redis等等任一方向深入研究）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Linux：&lt;/strong&gt;
除了第二阶段的能力，在Linux下面除了常规的操作和性能监控跟踪，还能够使用很多高级复杂的命令完成工作（watch/tcpdump/starce/ldd/ar等)；在shell脚本方面，已经能够编写比较复杂的shell脚本（超过500行）来协助完成很多包括备份、自动化处理、监控等工作的shell；对awk/sed/perl 等应用已经如火纯青，能够随意操作控制处理文本统计分析各种复杂格式的数据；对Linux内部机制有一些了解，对内核模块加载，启动错误处理等等有个基本的处理；同时对一些其他相关的东西也了解，比如NFS、磁盘管理等等；&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Nginx:&lt;/strong&gt;
在第二阶段的基础上面，已经能够把Nginx操作的很熟练，能够对Nginx进行更深入的运维工作，比如监控、性能优化，复杂问题处理等等；看个人兴趣，更多方面可以考虑侧重在关于Nginx工作原理部分的深入学习，主要表现在阅读源码开始，比如具体的master/worker工作机制，Nginx内部的事件处理，内存管理等等；同时可以学习Nginx扩展的开发，可以定制一些自己私有的扩展；同时可以对Nginx+Lua有一定程度的了解，看看是否可以结合应用出更好模式；这个阶段的要求是对Nginx原理的深入理解，可以考虑成为Nginx方向的深入专业者。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. MySQL/MongoDB：&lt;/strong&gt;
在第二阶段的基础上面，在MySQL应用方面，除了之前的基本SQL优化，还能够在完成一些复杂操作，比如大批量数据的导入导出，线上大批量数据的更改表结构或者增删索引字段等等高危操作；除了安装配置，已经能够处理更多复杂的MySQL的问题，比如各种问题的追查，主从同步延迟问题的解决、跨机房同步数据方案、MySQL高可用架构等都有涉及了解；对MySQL应用层面，对MySQL的核心关键技术比较熟悉，比如事务机制（隔离级别、锁等）、对触发器、分区等技术有一定了解和应用；对MySQL性能方面，有包括磁盘优化（SAS迁移到SSD）、服务器优化（内存、服务器本身配置）、除了二阶段的其他核心性能优化选项（innodb_log_buffer_size/back_log/table_open_cache/thread_cache_size/innodb_lock_wait_timeout等）、连接池软件选择应用，对show *（show status/show profile）类的操作语句有深入了解，能够完成大部分的性能问题追查；MySQL备份技术的深入熟悉，包括灾备还原、对Binlog的深入理解，冷热备份，多IDC备份等；在MySQL原理方面，有更多了解，比如对MySQL的工作机制开始阅读部分源码，比如对主从同步（复制）技术的源码学习，或者对某个存储引擎（MyISAM/Innodb/TokuDB）等等的源码学习理解，如果条件允许，可以参考CSV引擎开发自己简单的存储引擎来保存一些数据，增强对MySQL的理解；在这个过程，如果自己有兴趣，也可以考虑往DBA方向发展。MongoDB层面，可以考虑比如说在写少读多的情况开始在线上应用MongoDB，或者是做一些线上的数据分析处理的操作，具体场景可以按照工作来，不过核心是要更好的深入理解RMDBS和NoSQL的不同场景下面的应用，如果条件或者兴趣允许，可以开始深入学习一下MongoDB的工作机制。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Redis/Memcached：&lt;/strong&gt;
在第二阶段的基础上面，能够更深入的应用和学习。因为Memcached不是特别复杂，建议可以把源码进行阅读，特别是内存管理部分，方便深入理解；Redis部分，可以多做一些复杂的数据结构的应用（zset来做排行榜排序操作/事务处理用来保证原子性在秒杀类场景应用之类的使用操作）；多涉及aof等同步机制的学习应用，设计一个高可用的Redis应用架构和集群；建议可以深入的学习一下Redis的源码，把在第二阶段积累的知识都可以应用上，特别可以阅读一下包括核心事件管理、内存管理、内部核心数据结构等充分学习了解一下。如果兴趣允许，可以成为一个Redis方面非常专业的使用者。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. PHP：&lt;/strong&gt;
作为基础核心技能，我们在第二阶段的基础上面，需要有更深入的学习和应用。从基本代码应用上面来说，能够解决在PHP开发中遇到95%的问题，了解大部分PHP的技巧；对大部分的PHP框架能够迅速在一天内上手使用，并且了解各个主流PHP框架的优缺点，能够迅速方便项目开发中做技术选型；在配置方面，除了常规第二阶段会的知识，会了解一些比较偏门的配置选项（php auto_prepend_file/auto_append_file），包括扩展中的一些复杂高级配置和原理（比如memcached扩展配置中的memcache.hash_strategy、apc扩展配置中的apc.mmap_file_mask/apc.slam_defense/apc.file_update_protection之类的）；对php的工作机制比较了解，包括php-fpm工作机制（比如php-fpm在不同配置机器下面开启进程数量计算以及原理），对zend引擎有基本熟悉（vm/gc/stream处理），阅读过基本的PHP内核源码（或者阅读过相关文章），对PHP内部机制的大部分核心数据结构（基础类型/Array/Object）实现有了解，对于核心基础结构（zval/hashtable/gc）有深入学习了解；能够进行基本的PHP扩展开发，了解一些扩展开发的中高级知识（minit/rinit等），熟悉php跟apache/nginx不同的通信交互方式细节（mod_php/fastcgi）；除了开发PHP扩展，可以考虑学习开发Zend扩展，从更底层去了解PHP。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. C/C++：&lt;/strong&gt;
在第二阶段基础上面，能够在C/C++语言方面有更深入的学习了解，能够完成中小型C/C++系统的开发工作；除了基本第二阶段的基础C/C++语法和数据结构，也能够学习一些特殊数据结构（b-tree/rb-tree/skiplist/lsm-tree/trie-tree等）方便在特殊工作中需求；在系统编程方面，熟悉多进程、多线程编程；多进程情况下面了解大部分多进程之间的通信方式，能够灵活选择通信方式（共享内存/信号量/管道等）；多线程编程能够良好的解决锁冲突问题，并且能够进行多线程程序的开发调试工作；同时对网络编程比较熟悉，了解多进程模型/多线程模型/异步网络IO模型的差别和选型，熟悉不同异步网络IO模型的原理和差异（select/poll/epoll/iocp等），并且熟悉常见的异步框架（ACE/ICE/libev/libevent/libuv/Boost.ASIO等）和使用，如果闲暇也可以看看一些国产自己开发的库（比如muduo）；同时能够设计好的高并发程序架构（leader-follow/master-worker等）；了解大部分C/C++后端Server开发中的问题（内存管理、日志打印、高并发、前后端通信协议、服务监控），知道各个后端服务RPC通信问题（struct/http/thirft/protobuf等）；能够更熟络的使用GCC和GDB来开发编译调试程序，在线上程序core掉后能够迅速追查跟踪解决问题；通用模块开发方面，可以积累或者开发一些通用的工具或库（比如异步网络框架、日志库、内存池、线程池等），不过开发后是否应用要谨慎，省的埋坑去追bug；&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. 前端：&lt;/strong&gt;
深入了解HTTP协议（包括各个细致协议特殊协议代码和背后原因，比如302静态文件缓存了，502是nginx后面php挂了之类的）；除了之前的前端方面的各种框架应用整合能力，前端方面的学习如果有兴趣可以更深入，表现形式是，可以自己开发一些类似jQuery的前端框架，或者开发一个富文本编辑器之类的比较琐碎考验JavaScript功力；&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. 其他领域语言学习：&lt;/strong&gt;
在基础的PHP/C/C++语言方面有基本积累，建议在当前阶段可以尝试学习不同的编程语言，看个人兴趣爱好，脚本类语言可以学学 Python/Ruby 之类的，函数式编程语言可以试试 Lisp/Haskell/Scala/Erlang 之类的，静态语言可以试试 Java/Golang，数据统计分析可以了解了解R语言，如果想换个视角做后端业务，可以试试 Node.js还有前面提到的跟Nginx结合的Nginx_Lua等。学习不同的语言主要是提升自己的视野和解决问题手段的差异，比如会了解除了进程/线程，还有轻量级协程；比如在跨机器通信场景下面，Erlang的解决方案简单的惊人；比如在不想选择C/C++的情况下，还有类似高效的Erlang/Golang可用等等；主要是提升视野。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. 其他专业方向学习：&lt;/strong&gt;
在本阶段里面，会除了基本的LNMP技能之外，会考虑一些其他领域知识的学习，这些都是可以的，看个人兴趣和长期的目标方向。目前情况能够选择的领域比较多，比如、云计算（分布式存储、分布式计算、虚拟机等），机器学习（数据挖掘、模式识别等，应用到统计、个性化推荐），自然语言处理（中文分词等），搜索引擎技术、图形图像、语音识别等等。除了这些高大上的，也有很多偏工程方面可以学习的地方，比如高性能系统、移动开发（Android/IOS）、计算机安全、嵌入式系统、硬件等方向。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. 系统设计：&lt;/strong&gt;
系统设计在第二阶段的基础之上，能够应用掌握的经验技能，设计出比较复杂的中大型系统，能够解决大部分线上的各种复杂系统的问题，完成类似 浏览器 -&amp;gt; CDN -&amp;gt; 负载均衡 -&amp;gt;接入层 -&amp;gt; Nginx+PHP -&amp;gt; 业务缓存 -&amp;gt; 数据库 -&amp;gt; 各路复杂后端RPC交互（存储后端、逻辑后端、反作弊后端、外部服务） -&amp;gt; 更多后端 酱紫的复杂业务；能够支撑每天数千万到数亿流量网站的正常开发维护工作。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;第四阶段：架构阶段 （架构师）&lt;/h2&gt;

&lt;p&gt;ps: 暂时不展开讨论，等下次专门撰文来描述补充本部分内容&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;第五阶段：专家阶段（方向领域专家）&lt;/h2&gt;

&lt;p&gt;ps：高大上，这块不展开讨论 ^_^&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;第六阶段：科学家阶段&lt;/h2&gt;

&lt;p&gt;ps：高大上，这块不展开讨论 ^_^&lt;/p&gt;

&lt;p&gt;转载自:  &lt;a href=&quot;http://blog.jobbole.com/100064/&quot;&gt;伯乐在线&lt;/a&gt;   原文出处： &lt;a href=&quot;http://blog.csdn.net/heiyeshuwu/article/details/40098043&quot;&gt;黑夜路人&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Apr 2016 11:23:57 +0800</pubDate>
        <link>http://peakcool.cn/%E8%BD%AC%E8%BD%BD%E6%94%B6%E8%97%8F/2016/04/26/php-growup.html</link>
        <guid isPermaLink="true">http://peakcool.cn/%E8%BD%AC%E8%BD%BD%E6%94%B6%E8%97%8F/2016/04/26/php-growup.html</guid>
        
        
        <category>转载收藏</category>
        
      </item>
    
      <item>
        <title>PHP之基础语法</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;一. 基本语法&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;开始结束标记: “&lt;?php ?&gt;”&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Note：&lt;/strong&gt;文件末尾的 PHP 代码段结束标记”?&amp;gt;”可以不要，有些情况下当使用 include() 或者 require() 时省略掉会更好些。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;同java,c一样，php每个语句后需用分号 “ ; “ 结束。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-1&quot;&gt;二. 类型&lt;/h3&gt;

&lt;h4 id=&quot;php8&quot;&gt;php支持的8种基本数据类型&lt;/h4&gt;

&lt;p&gt;四种标量类型:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;boolean (布尔型)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;integer (整型)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;string (字符串)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;float (浮点型)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;两种复合类型:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;array (数组型)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;object (对象)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;两种特殊类型:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;resource (资源)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;null (null)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;var_dump() 查看表达式值和类型,is_type() 查看某个类型。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;整数溢出,如果给定一个整数或运算结果得出的整数超出int范围(2^32)，将会解释会float。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;string&quot;&gt;三.字符串(string)&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;声明字符串:&lt;/em&gt;&lt;/strong&gt; 字符串通常用单引号或双引号定义。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;在单引号中的变量和特殊含义的字符不会被替换&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 12;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;他很高&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;他的年龄才&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$age&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;;
他很高
他的年龄才12；
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'他很高\n他的年龄才$age'&lt;/span&gt;;
他很高&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;他的年龄才&lt;span class=&quot;nv&quot;&gt;$age&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;字符串可以用’.’ (点) 操作符连接起来&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello,&quot;&lt;/span&gt;.&lt;span class=&quot;s2&quot;&gt;&quot;World&quot;&lt;/span&gt;;
Hello,World&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;存取和修改字符串中的字符（类似于数组）&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello,World&quot;&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1];
e
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;;
H&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;其他类型转换为字符串（string）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;在一个值前面加上(string)或者使用strval()函数来转换成字符串型。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 18;
php &amp;gt; var_dump&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
int&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;18&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;string&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$age&lt;/span&gt;;
php &amp;gt; var_dump&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
string&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;18&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ol&gt;
  &lt;li&gt;常用字符串函数&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;字符串替换&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;str_replace ($search , $replace , $subject [, int &amp;amp;$count ])&lt;/p&gt;

&lt;blockquote&gt;$search: 查找替换目标值

$replace: $search的替换值

subject: 执行替换的数组或者字符串

count: 控制匹配和替换的次数&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello,My name is Tom,what is your name?&quot;&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;str_replace&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;nickname&quot;&lt;/span&gt;,&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
Hello,My nickname is Tom,what is your nickname?&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;去掉字符串两边空格&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;trim ($str)&lt;/p&gt;

&lt;blockquote&gt;$str: 目标字符串&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;  Hello     &quot;&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;trim&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
Hello&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;去掉字符串中html和php标记&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;strip_tags ($str)&lt;/p&gt;

&lt;blockquote&gt;$str: 目标字符串&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;td&amp;gt;&amp;lt;p&amp;gt;Hello World&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt;&quot;&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;strip_tags&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
Hello World&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;将目标字符串重复多次&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;str_repeat ($str,int $num)&lt;/p&gt;

&lt;blockquote&gt;$str: 目标字符串

$num: 重复次数&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello World!!&quot;&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;str_repeat&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;,5&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
Hello World!!Hello World!!Hello World!!Hello World!!Hello World!!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;返回字符串长度&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;strlen ($str)&lt;/p&gt;

&lt;blockquote&gt;$str: 目标字符串&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;strlen&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
11&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;计算字串出现的次数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;substr_count (string $haystack , string $needle )&lt;/p&gt;

&lt;blockquote&gt;$haystack: 目标字符串

$needle: 查找出现次数的字符串&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello World,Hello China&quot;&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;substr_count&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;截取字符串&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;substr ( string $string , int $start [, int $length ] )&lt;/p&gt;

&lt;blockquote&gt;$string: 目标字符串

$start: 如果 start 是非负数，返回的字符串将从 string 的 start 位置开始，从 0 开始计算。
如果 start 是负数，返回的字符串将从 string 结尾处向前数第 start 个字符开始。如果string 的长度小于或等于 start，将返回 FALSE。

$length: 
1.如果提供了正数的 length，返回的字符串将从 start 处开始最多包括 length 个字符（取决于 string 的长度）。

2.如果提供了负数的 length，那么 string 末尾处的许多字符将会被漏掉（若 start 是负数则从字符串尾部算起）。

3.如果 start 不在这段文本中，那么将返回一个空字符串。

4.如果提供了值为 0，FALSE 或 NULL 的 length，那么将返回一个空字符串。

5.如果没有提供 length，返回的子字符串将从 start 位置开始直到字符串结尾。&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;php &amp;gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello,World&quot;&lt;/span&gt;;
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;substr&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;,1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
ello,World
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;substr&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;,1,3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
ell
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;substr&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;,1,-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
ello,Wo
php &amp;gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;substr&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;,1,10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
ello,World&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Mon, 25 Apr 2016 21:08:25 +0800</pubDate>
        <link>http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/04/25/php-basics.html</link>
        <guid isPermaLink="true">http://peakcool.cn/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/2016/04/25/php-basics.html</guid>
        
        
        <category>技术分享</category>
        
      </item>
    
      <item>
        <title>程序员的天堂和地狱【转载】</title>
        <description>&lt;p&gt;开发人员梦到天堂里的程序员：每个人都坐在自己的电脑上，一口一口灌着咖啡，眼带血丝……最后的时间限制正在逼近……开发人员惊醒过来，继续睡；&lt;/p&gt;

&lt;p&gt;又梦到了地狱中的程序员：每个人都在自己的电脑前敲键盘（因为截止时间的逼近），在谩骂客户的同时，大口大口喝咖啡，眼睛里同样布满血丝。&lt;/p&gt;

&lt;p&gt;沉睡中的开发人员于是问恰巧出现的天使：“既然如此，那么，天堂的程序员和地狱的程序员之间的区别是什么呢？”“区别在于，”这个天使回答，“天堂里的程序员能够按时完成任务。”&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Apr 2016 10:13:21 +0800</pubDate>
        <link>http://peakcool.cn/%E8%BD%AC%E8%BD%BD%E6%94%B6%E8%97%8F/2016/04/25/heaven-hell.html</link>
        <guid isPermaLink="true">http://peakcool.cn/%E8%BD%AC%E8%BD%BD%E6%94%B6%E8%97%8F/2016/04/25/heaven-hell.html</guid>
        
        
        <category>转载收藏</category>
        
      </item>
    
  </channel>
</rss>
